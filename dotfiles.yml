---
- name: Configure dotfiles
  hosts: localhost
  vars:
    path_app_conf: "{{ playbook_dir }}/appconf"
    path_bashrc: "~/.bashrc"
    ssh_config_path: "~/.ssh/config.d"
    path_ssh_conf: "~/.ssh/"
    path_private_local: "~/.config/private_local"
    ncspot_dir: "~/.var/app/io.github.hrkfdn.ncspot/config/ncspot/"
    zk_version: "v0.15.1"
  tasks:
    - name: "Create private_local"
      ansible.builtin.file:
        path: "{{ path_private_local }}"
        state: directory

    - name: "Install bashrc"
      ansible.builtin.file:
        path: "{{ path_bashrc }}"
        src: "{{ playbook_dir }}/bashrc"
        state: link

    - name: "Create config.d"
      ansible.builtin.file:
        path: "{{ ssh_config_path }}"
        state: directory

    - name: "Install ssh config"
      ansible.builtin.file:
        path: "{{ path_ssh_conf }}/config"
        src: "{{ playbook_dir }}/ssh_config"
        state: link
        mode: '600'

    - name: "Configure Applications"
      tags:
        - never
        - application
      block:
        - name: "Install from flatpak"
          community.general.flatpak:
            name:
              - io.github.hrkfdn.ncspot
              - io.gitlab.librewolf-community
            state: latest
            remote: flathub
          notify:
            - Ncspot dir
            - Ncspot conf
            - Newsboat conf

        - name: "Install zk"
          ansible.builtin.unarchive:
            src: https://github.com/zk-org/zk/releases/download/{{ zk_version }}/zk-{{ zk_version }}-linux-amd64.tar.gz
            dest: "~/.opt/bin/"
            include: "zk"
            remote_src: true
            list_files: true
          tags:
            - zk
          notify:
            - App conf

        - name: Setup ptyxis basic profile
          tags:
            - ptyxis
          vars:
            settings:
              bold-is-bright: false
              label: "'Basic'"
              palette: "'dracula'"
              preserve-directory: "'safe'"
          loop: "{{ settings | dict2items }}"
          community.general.dconf:
            key:  "/org/gnome/Ptyxis/Profiles/ffca20fa64c8cc4cae7d0dbc672d3cc9/{{ item.key }}"
            value: "{{ item.value }}"

        - name: Setup ptyxis presentation profile
          tags:
            - ptyxis
          vars:
            settings:
              bold-is-bright: true
              label: "'Presentation'"
              palette: "'Bluloco Light'"
              preserve-directory: "'safe'"
              scrollback-lines: 100
              use-proxy: false
          loop: "{{ settings | dict2items }}"
          community.general.dconf:
            key:  "/org/gnome/Ptyxis/Profiles/ecea637766b3bd8cb0df50f568430996/{{ item.key }}"
            value: "{{ item.value }}"

        - name: Setup ptyxis presentation profile
          tags:
            - ptyxis
          vars:
            settings:
              default-profile-uuid: "'ffca20fa64c8cc4cae7d0dbc672d3cc9'"
              enable-a11y: false
              interface-style: "'system'"
              new-tab-position: "'last'"
              profile-uuids: "['ffca20fa64c8cc4cae7d0dbc672d3cc9', 'ecea637766b3bd8cb0df50f568430996']"
              restore-session: false
              restore-window-size: true
              use-system-font: true
          loop: "{{ settings | dict2items }}"
          community.general.dconf:
            key:  "/org/gnome/Ptyxis/{{ item.key }}"
            value: "{{ item.value }}"

        
        - name: Setup ptyxis Custom Shortcuts
          tags:
            - ptyxis
          loop:
            - key: "set-title"
              value: "'<Control><Alt>t'"
          community.general.dconf:
            key:  "/org/gnome/Ptyxis/Shortcuts/{{ item.key }}"
            value: "{{ item.value }}"

        - name: "Add charm repository"
          become: true
          ansible.builtin.yum_repository:
            name: charm
            file: charm
            description: "Charm repository"
            baseurl: "https://repo.charm.sh/yum/"
            gpgkey: "https://repo.charm.sh/yum/gpg.key"
          tags:
            - charm

        - name: "Install apps from repo"
          become: true
          ansible.builtin.dnf:
            name:
              - glow
              - toot
              - bat
              - pandoc
              - uv
              - syncthing
              - newsboat
            state: present
          notify:
            - App conf

        - name: Install uv tools
          tags:
            - python
          loop:
            - papis
            - papis-scihub
            - meshtastic
          ansible.builtin.command: >
            uv tool install {{ item }}
            
  handlers:
    - name: Ncspot dir
      ansible.builtin.file:
        path: "{{ ncspot_dir }}"
        state: directory

    - name: Ncspot conf
      ansible.builtin.copy:
        dest: "{{ ncspot_dir }}/config.toml"
        src: "{{ playbook_dir }}/appconf/ncspot/config.toml"
        remote_src: false
        force: true

    - name: App conf
      loop:
        - path: "~/.config/glow"
          src: "{{ path_app_conf}}/glow"
        - path: "~/.config/zk"
          src:  "{{ path_app_conf}}/zk"
        - path: "~/.newsboat/config"
          src: "{{ pat_app_conf }}/newsboat/config"
      ansible.builtin.file:
        path: "{{ item.path }}"
        src:  "{{ item.src }}"
        state: link
